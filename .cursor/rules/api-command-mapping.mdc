---
globs: internal/**/*.go,pkg/**/*.go
---
# API ↔ AP3000 指令映射

- 充电控制（开始/停止）
  - HTTP: `POST /api/v1/charging/start` / `POST /api/v1/charging/stop`
  - 代码：`internal/adapter/http/gateway_handlers.go`
  - 网关：`pkg/gateway/device_gateway.go#SendChargingCommandWithParams`
  - 协议：`0x82`（服务器开始/停止充电操作）
  - 要点：
    - 端口号 API 为 1-based，协议为 0-based（0x00=第1路）
    - 订单号 16 字节；余额/有效期 4 字节小端；充电值 2 字节小端
    - 充电模式：0=计时，1=包月，2=计量，3=计次（根据协议语义处理）
    - 最大充电时长/过载功率/二维码灯/短路检测等字段按文档设置
- 设备定位
  - HTTP: `POST /api/v1/device/locate`
  - 网关：`pkg/gateway/device_gateway.go#SendLocationCommand`
  - 协议：`0x96`（声光寻找设备）参数：定位时间 1 字节（秒）
- 状态/详情查询
  - HTTP: `GET /api/v1/device/{id}/status` / `GET /api/v1/device/{id}/detail`
  - 网关：`IsDeviceOnline` / `GetDeviceDetail`
  - 数据来源：`core.TCPManager` 单一数据源
- 协议文档引用：[AP3000-设备与服务器通信协议.md](mdc:docs/协议/AP3000-设备与服务器通信协议.md)

强制要求：
- API 层统一通过 `DeviceGateway` 下发命令，禁止绕过 `TCPWriter` 直接写 socket。
- 发送前必须做 DeviceID 标准化与 PhysicalID 一致性校验。
- 同设备命令需遵循 ≥0.5 秒发送间隔（见 AP3000 协议 1.0.2 第7条）。
